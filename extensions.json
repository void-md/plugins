[
{
      "id": "apyhub-catalog",
      "type": "community",
      "name": "ApyHub Catalog",
      "description": "Support API blocks and sending requests",
      "version": "0.1.0",
      "author": "ApyHub",
      "enabled": true,
      "readme": "# Voiden Hello\n\n## Overview\n\nThe **Voiden API Extension** provides a streamlined way for Voiden users to build and manage REST API calls through a set of configurable blocks. Each block corresponds to a component of an HTTP request, making it easier to define endpoints, headers, parameters, and body content without having to code everything from scratch. By combining these blocks, you can quickly set up and customize your API calls in a modular, low-code environment.\n\n## Available Blocks & Usage\n\nBelow is a list of the blocks available in this extension, along with the commands used to insert them:\n\n### 1. Endpoint\n\n- **Slash Command**: `/endpoint`\n- **Purpose**: Creates a block where you can add a base URL and select the request method (e.g., GET, POST, PUT, DELETE).\n- **Usage**:\n  1. Insert the block using the slash command.\n  2. Specify the base URL (e.g., `https://api.example.com/v1/resource`).\n  3. Select the request type.\n\n### 2. Headers\n\n- **Slash Command**: `/headers`\n- **Purpose**: Creates a table where you can specify the headers for the request (e.g., `Authorization`, `Content-Type`).\n- **Usage**:\n  1. Insert the block using the slash command.\n  2. Add rows for each header key-value pair.\n\n### 3. Query Table\n\n- **Slash Command**: `/query`\n- **Purpose**: Creates a table where you can specify query parameters for the request.\n- **Usage**:\n  1. Insert the block using the slash command.\n  2. Define each parameter name and value (e.g., `page=2`, `sort=desc`).\n  3. These parameters will be appended to the endpoint URL.\n\n### 4. Multipart Table\n\n- **Slash Command**: `/multipart`\n- **Purpose**: Creates a table where you can send files or shared files as multipart form-data.\n- **Usage**:\n  1. Insert the block using the slash command.\n  2. For each row, specify the name of the field and the file to be sent.\n  3. Ideal for file uploads or form submissions that require file data.\n\n### 5. URL Table\n\n- **Slash Command**: `/urltable`\n- **Purpose**: Creates a table where you can send URL-encoded form data.\n- **Usage**:\n  1. Insert the block using the slash command.\n  2. Define each key-value pair to be included in the request body as `application/x-www-form-urlencoded`.\n\n### 6. JSON\n\n- **Slash Command**: `/json`\n- **Purpose**: Lets you specify the JSON body content for the request.\n- **Usage**:\n  1. Insert the block using the slash command.\n  2. Enter valid JSON data (e.g., `{\"key\": \"value\"}`).\n\nOnce all blocks are configured, you can execute the request and get the response in response panel\n\n---\n\n## Feedback & Support\n\nIf you have any questions, feature requests, or need support, feel free to reach out through [email](mailto:hello@apyhub.com) or discord. We're always looking to improve the experience for everyone using the Voiden API Extension."
}
]
